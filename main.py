# in & as LazyDeveloper
# Please Don't Remove Credit

from configs import Config
from pyrogram import Client, filters, idle
from pyrogram.errors import QueryIdInvalid
from pyrogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery, InlineQuery, InlineQueryResultArticle,InputTextMessageContent
from LazyDeveloper.forcesub import ForceSub
import asyncio

# Bot Client for Inline Search
Bot = Client(
    session_name=Config.BOT_SESSION_NAME,
    api_id=Config.API_ID,
    api_hash=Config.API_HASH,
    bot_token=Config.BOT_TOKEN
)

# User Client for Searching in Channel.
User = Client(
    session_name=Config.USER_SESSION_STRING,
    api_id=Config.API_ID,
    api_hash=Config.API_HASH
)

@Bot.on_message(filters.private & filters.command("start"))
async def start_handler(_, event: Message):
	await event.reply_photo("https://telegra.ph/file/71a38d9a8f3bc6cab4a88.jpg",
                                caption=Config.START_MSG.format(event.from_user.mention),
                                reply_markup=InlineKeyboardMarkup([
                                    [InlineKeyboardButton("üî∫ D·¥è…¥·¥Ä·¥õ·¥á ·¥ús üî∫", url="https://t.me/ROYAL_GAGAN_DEEP_SINGH_MEHRA")],
                                    [InlineKeyboardButton("‚ö°Ô∏è ‚ô•Ô∏èüëë·¥ø·¥º·µû·¥¨·¥∏ ·¥ºÀ¢·¥π ·¥π·¥±·¥¥·¥ø·¥¨üëë‚ô•Ô∏è ‚ö°Ô∏è", url="https://t.me/movies_villa_backup")],
                                    [InlineKeyboardButton("ü§íH·¥á ü·¥ò", callback_data="Help_msg"),
                                    InlineKeyboardButton("ü¶ãA ô·¥è·¥ú·¥õ", callback_data="About_msg")]]))

@Bot.on_message(filters.private & filters.command("help"))
async def help_handler(_, event: Message):

    await event.reply_text(Config.ABOUT_HELP_TEXT.format(event.from_user.mention),
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("U·¥ò·¥Ö·¥Ä·¥õ·¥ás", url="https://t.me/MOVIES_VILLA_UPDATE"),
             InlineKeyboardButton("S·¥ú·¥ò·¥ò·¥è Ä·¥õ G Ä·¥è·¥ú·¥ò", url="https://t.me/Movies_villae"), 
             InlineKeyboardButton("A ô·¥è·¥ú·¥õ", callback_data="About_msg")]
        ])
    )

@Bot.on_message(filters.incoming)
async def inline_handlers(_, event: Message):
    if event.text == '/start':
        return
    answers = f'**üìÇ M·¥è·¥†…™·¥ás V…™ ü ü·¥Ä F·¥è Ä ‚û† {event.text} \n‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü§\nüîä\n‚û† T è·¥ò·¥á O…¥ ü è M·¥è·¥†…™·¥á N·¥Ä·¥ç·¥á W…™·¥õ ú C·¥è Ä Ä·¥á·¥Ñ·¥õ S·¥ò·¥á ü ü…™…¥…¢. D·¥è…¥·¥õ ·¥õ è·¥ò·¥á B ú·¥áJ·¥è, B ú·¥áJ D·¥è, s·¥á…¥·¥Ö ·¥ç·¥á ·¥á·¥õ·¥Ñ...‚úçÔ∏è\…¥‚û† A·¥Ö·¥Ö Y·¥á·¥Ä Ä F·¥è Ä B·¥á·¥õ·¥õ·¥á Ä R·¥ás·¥ú ü·¥õ.üóìÔ∏è\n‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü•‚ü§\n\n**'
    async for message in User.search_messages(chat_id=Config.CHANNEL_ID, limit=50, query=event.text):
        if message.text:
            thumb = None
            f_text = message.text
            msg_text = message.text.html
            if "|||" in message.text:
                f_text = message.text.split("|||", 1)[0]
                msg_text = message.text.html.split("|||", 1)[0]
            answers += f'**üéû M·¥è·¥†…™·¥á T…™·¥õ ü·¥á ‚û† ' + '' + f_text.split("\n", 1)[0] + '' + '\n\nüìú D·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö U Ä üs ‚û† ' + '' + f_text.split("\n", 2)[-1] + ' \n\n‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±\nL…™…¥·¥ã W…™ ü ü A·¥ú·¥õ·¥è D·¥á ü·¥á·¥õ·¥á I…¥ ùüπùüªS·¥á·¥Ñ...‚è∞\n‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±‚ñ∞‚ñ±\n\n**'
    try:
        msg = await event.reply_text(answers)
        await asyncio.sleep(35)
        await event.delete()
        await msg.delete()
    except:
        print(f"[{Config.BOT_SESSION_NAME}] - F·¥Ä…™ ü·¥á·¥Ö ·¥õ·¥è A…¥s·¥°·¥á Ä - {event.from_user.first_name}")


@Bot.on_callback_query()
async def button(bot, cmd: CallbackQuery):
        cb_data = cmd.data
        if "About_msg" in cb_data:
            await cmd.message.edit(
			text=Config.ABOUT_BOT_TEXT,
			disable_web_page_preview=True,
			reply_markup=InlineKeyboardMarkup(
				[
					[
						InlineKeyboardButton("U·¥ò·¥Ö·¥Ä·¥õ·¥ás", url="https://t.me/MOVIES_VILLA_UPDATE")
					],
					[
						InlineKeyboardButton("C·¥è…¥…¥·¥á·¥Ñ·¥õ A·¥Ö·¥ç…™…¥", url="https://t.me/ROYAL_GAGAN_DEEP_SINGH_MEHRA"),
						InlineKeyboardButton("üè†H·¥è·¥ç·¥á", callback_data="gohome")
					]
				]
			),
			parse_mode="html"
		)
        elif "Help_msg" in cb_data:
            await cmd.message.edit(
			text=Config.ABOUT_HELP_TEXT,
			disable_web_page_preview=True,
			reply_markup=InlineKeyboardMarkup(
				[
					[   InlineKeyboardButton("H·¥á ü·¥ò", callback_data="Help_msg"),
						InlineKeyboardButton("U·¥ò·¥Ö·¥Ä·¥õ·¥á C ú·¥Ä…¥…¥·¥á ü", url="https://t.me/MOVIES_VILLA_UPDATE")
					], 
                    [
						InlineKeyboardButton("C·¥è…¥…¥·¥á·¥Ñ·¥õ A·¥Ö·¥ç…™…¥", url="https://t.me/ROYAL_GAGAN_DEEP_SINGH_MEHRA"),
						InlineKeyboardButton("üè†H·¥è·¥ç·¥á", callback_data="gohome")
					]
				]
			),
			parse_mode="html"
		)
        elif "gohome" in cb_data:
            await cmd.message.edit(
			text=Config.START_MSG.format(cmd.from_user.mention),
			disable_web_page_preview=True,
			reply_markup=InlineKeyboardMarkup(
				[
                    [
						InlineKeyboardButton("H·¥á ü·¥ò", callback_data="Help_msg"),
						InlineKeyboardButton("A ô·¥è·¥ú·¥õ", callback_data="About_msg")
					],
					[
						InlineKeyboardButton("S·¥ú·¥ò·¥ò·¥è Ä·¥õ ·¥Ñ ú·¥Ä…¥…¥·¥á ü", url="https://t.me/Movies_villa_support"),
					]
				]
			),
			parse_mode="html"
		)

# Start Clients
Bot.start()
User.start()
# Loop Clients till Disconnects
idle()
# After Disconnects,
# Stop Clients
Bot.stop()
User.stop()
